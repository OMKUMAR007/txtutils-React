{"version":3,"sources":["Component/Alert.js","Component/Navbar.js","Component/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","capitalize","word","lower","toLowerCase","charAt","toUpperCase","slice","react_default","a","createElement","style","height","alert","className","role","type","msg","data-bs-dismiss","aria-label","Navbar","concat","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","id","aria-current","onClick","togglemode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","color","heading","value","onChange","event","target","console","log","rows","backgroundColor","newText","showAlert","split","join","SpeechSynthesisUtterance","window","speechSynthesis","speak","toggle","document","getElementById","textContent","innerHTML","cancel","length","trim","replace","filter","element","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","background","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.aaa8f80a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    <div style={{ height: \"50px\" }}>\r\n      {props.alert && (\r\n        <div>\r\n          <div\r\n            className=\"alert alert-success alert-dismissible fade show\"\r\n            role=\"alert\"\r\n          >\r\n            <strong>{capitalize(props.alert.type)}</strong>:\r\n            {capitalize(props.alert.msg)}\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              data-bs-dismiss=\"alert\"\r\n              aria-label=\"Close\"\r\n            ></button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {/* TxtUTILS */}\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/\">\r\n                  Features\r\n                </Link>\r\n              </li> */}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        {/*dark mode button */}\r\n        <div\r\n          className={`form-check form-switch  text-${\r\n            props.mode === \"light\" ? \"dark\" : \"light\"\r\n          } `}\r\n        >\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            id=\"flexSwitchCheckDefault\"\r\n            onClick={props.togglemode}\r\n          />\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n            Enable Darkmode\r\n          </label>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\nNavbar.propTypes = { title: PropTypes.string.isRequired };\r\nNavbar.defaultProps = {\r\n  title: \"Enter title\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpclick = () => {\r\n    console.log(\" upper clicked\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"converted to Uppercase\", \"success\");\r\n  };\r\n  const handleLpclick = () => {\r\n    console.log(\" lower clicked\");\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"converted to Lowercase\", \"success\");\r\n  };\r\n  const handleclearclick = () => {\r\n    console.log(\" clear clicked\");\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"text cleared \", \"success\");\r\n  };\r\n  const handlersclick = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"extra spaces removed\", \"success\");\r\n  };\r\n\r\n  const speak = () => {\r\n    let msg = new SpeechSynthesisUtterance(text);\r\n    window.speechSynthesis.speak(msg);\r\n    const toggle = document.getElementById(\"toggle\");\r\n    if (toggle.textContent === \"Read Aloud\") {\r\n      toggle.innerHTML = \"Stop\";\r\n\r\n      props.showAlert(\"read aloud started\", \"success\");\r\n    } else {\r\n      props.showAlert(\"read aloud stoped\", \"success\");\r\n      toggle.innerHTML = \"Read Aloud\";\r\n\r\n      if ((toggle.innerHTML = \"Read Aloud\")) {\r\n        window.speechSynthesis.cancel();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOnchange = (event) => {\r\n    setText(event.target.value);\r\n    console.log(\"clickedm handeld\");\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n        <h1 className=\"text-center\">{props.heading}</h1>\r\n        <div className=\"mb-3 container \">\r\n          <textarea\r\n            className=\"form-control my-3\"\r\n            value={text}\r\n            onChange={handleOnchange}\r\n            id=\"myBox\"\r\n            rows=\"10\"\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#333333\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n          ></textarea>\r\n\r\n          <button\r\n            className=\" btn btn-primary mx-1 my-1 \"\r\n            onClick={handleUpclick}\r\n          >\r\n            convert to UpperCase\r\n          </button>\r\n          <button className=\" btn btn-dark mx-1 my-1\" onClick={handleLpclick}>\r\n            convert to LowerCase\r\n          </button>\r\n\r\n          <button className=\" btn btn-info mx-1 my-1\" onClick={handlersclick}>\r\n            Remove Space\r\n          </button>\r\n          <button\r\n            className=\" btn btn-danger mx-1 my-1 \"\r\n            onClick={handleclearclick}\r\n          >\r\n            Clear\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            onClick={speak}\r\n            className=\"btn btn-warning mx-1 my-1\"\r\n            id=\"toggle\"\r\n          >\r\n            Read Aloud\r\n          </button>\r\n\r\n          <div className=\"container my-3\">\r\n            <h2>Your text summary is here ..</h2>\r\n            <p>\r\n              <b> {text.length > 0 ? text.trim().split(\" \").length : 0} </b>\r\n              words,\r\n              <b> {text.replace(/\\s+/g, \"\").length} </b>characters\r\n            </p>\r\n            <p>\r\n              {0.008 *\r\n                text.split(\" \").filter((element) => {\r\n                  return element.length !== 0;\r\n                }).length}{\" \"}\r\n              minutes reading time\r\n            </p>\r\n            <h3>Preview</h3>\r\n            <p>{text.length > 0 ? text : \"Nothing to preview !!\"}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./Component/Alert\";\nimport Navbar from \"./Component/Navbar\";\nimport TextForm from \"./Component/TextForm\";\n\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); //wheather dark mmode is enable or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n  const togglemode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.background = \"grey\";\n      showAlert(\"Dark mode has been enable\", \"Success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.background = \"white\";\n      showAlert(\"Light mode has been enable\", \"Success\");\n    }\n  };\n  return (\n    <>\n      {/* /      <Router> */}\n      <Navbar title=\"txtUtils\" mode={mode} togglemode={togglemode} />\n      <Alert alert={alert} />\n      {/* <Routes>\n          <Route\n            path=\"/\"\n            element={ */}\n      <TextForm\n        showAlert={showAlert}\n        heading=\"Try txtUtils-Enter your text below !!\"\n        mode={mode}\n      />\n      {/* } */}\n      {/* //     />\n      //   </Routes>\n      // </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}